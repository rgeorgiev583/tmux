# -- unbiding ------------------------------------------------------------------
unbind n
unbind p
unbind C-b
unbind [
unbind p

# -- general -------------------------------------------------------------------

set -g default-terminal "screen-256color" # colors!
setw -g xterm-keys on
set -s escape-time 0                      # fastest command sequences
set -sg repeat-time 600                   # increase repeat timeout
set -s quiet on                           # disable various messages

# C-b is not acceptable -- Vim uses it
set -g prefix C-w
# Allows us to use C-a a <command> to send commands to a TMUX session inside
# another TMUX session
bind a send-prefix

#set -g status-utf8 on                     # expect UTF-8
#setw -g utf8 on

set -g history-limit 5000                 # boost history

# Setting the delay between prefix and command.
set -sg escape-time 1

# Set the base index for windows to 1 instead of 0.
set -g base-index 1

# mouse behavior
#set -g mouse-utf8 on
set -g mouse on

# https://github.com/seebi/tmux-colors-solarized/blob/master/tmuxcolors-256.conf
set -g status-bg colour235
set -g status-fg colour136
set -g status-attr default

# default window title colors
setw -g window-status-fg colour244
setw -g window-status-bg default
#setw -g window-status-attr dim

# active window title colors
setw -g window-status-current-fg colour166
setw -g window-status-current-bg default
#setw -g window-status-current-attr bright

# pane border
set -g pane-border-fg colour238
set -g pane-active-border-fg colour245

# message text
set -g message-bg colour235
set -g message-fg colour166

# pane number display
set -g display-panes-active-colour colour33
set -g display-panes-colour colour166
# clock
setw -g clock-mode-colour colour166
setw -g clock-mode-style 24

# Status Bar
set -g status-interval 1
set -g status-left-length 60
set -g status-right-length 60
set -g status-left ' #[default,bright]#H #[fg=colour238]| #[fg=colour248,bright]#(tmux-mem-cpu-load) #[fg=colour238]| #[default]'
set -g status-right ' #[fg=colour238]| #[default,bright]%a%l:%M:%S #[fg=colour238]| #[fg=blue,bright]%Y-%m-%d '

# pane navigation
bind -r h select-pane -L    # move left
bind -r j select-pane -D    # move down
bind -r k select-pane -U    # move up
bind -r l select-pane -R    # move right
bind > swap-pane -D         # swap current pane with the next one
bind < swap-pane -U         # swap current pane with the previous one

# set window split
bind v split-window -v
bind s split-window

bind C command-prompt -p "Name of new window: " "new-window -n '%%'"

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# -- display -------------------------------------------------------------------
set -g base-index 1           # start windows numbering at 1
set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time
set -g renumber-windows on    # renumber windows when a window is closed
set -g set-titles on          # set terminal title
setw -g automatic-rename on   # rename window to reflect current program
setw -g pane-base-index 1     # make pane numbering consistent with windows
# Enable activity alerts.
setw -g monitor-activity on
set -g visual-activity on

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# clear both screen and history
bind -n C-l send-keys C-l \; run 'tmux clear-history'

# Enable vi keys.
setw -g mode-keys vi

# -- copy mode -----------------------------------------------------------------
# Vimlike copy mode.
bind Enter copy-mode # enter copy mode
bind b list-buffers  # list paster buffers
bind p paste-buffer  # paste from the top pate buffer
bind P choose-buffer # choose which buffer to paste from

# the following vi-copy bindings match my vim settings
#   see https://github.com/gpakosz/.vim.git
bind -t vi-copy Escape cancel
bind -t vi-copy C-v rectangle-toggle
bind -t vi-copy v begin-selection
bind -t vi-copy y copy-selection
bind -t vi-copy H start-of-line
bind -t vi-copy L end-of-line

# https://github.com/edkolev/dots/blob/master/tmux.conf
# Updates for tmux 1.9's current pane splitting paths.

# from powerline
run-shell "tmux set-environment -g TMUX_VERSION_MAJOR $(tmux -V | cut -d' ' -f2 | cut -d'.' -f1 | sed 's/[^0-9]*//g')"
run-shell "tmux set-environment -g TMUX_VERSION_MINOR $(tmux -V | cut -d' ' -f2 | cut -d'.' -f2 | sed 's/[^0-9]*//g')"

# rm mouse mode fail
if-shell '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -ge 1\) -o #{$TMUX_VERSION_MAJOR} -gt 2' 'set -g mouse off'
if-shell '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -lt 1\) -o #{$TMUX_VERSION_MAJOR} -le 1' 'set -g mode-mouse off'

# fix pane_current_path on new window and splits
if-shell "#{$TMUX_VERSION_MAJOR} -gt 1 -o \( #{$TMUX_VERSION_MAJOR} -eq 1 -a #{$TMUX_VERSION_MINOR} -ge 8 \)" 'unbind c; bind c new-window -c "#{pane_current_path}"'
if-shell "#{$TMUX_VERSION_MAJOR} -gt 1 -o \( #{$TMUX_VERSION_MAJOR} -eq 1 -a #{$TMUX_VERSION_MINOR} -ge 8 \)" "unbind '\"'; bind '\"' split-window -v -c '#{pane_current_path}'"
if-shell "#{$TMUX_VERSION_MAJOR} -gt 1 -o \( #{$TMUX_VERSION_MAJOR} -eq 1 -a #{$TMUX_VERSION_MINOR} -ge 8 \)" 'unbind v; bind v split-window -h -c "#{pane_current_path}"'
if-shell "#{$TMUX_VERSION_MAJOR} -gt 1 -o \( #{$TMUX_VERSION_MAJOR} -eq 1 -a #{$TMUX_VERSION_MINOR} -ge 8 \)" 'unbind %; bind % split-window -h -c "#{pane_current_path}"'
